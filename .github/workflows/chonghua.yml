name: 葱花视频

on:
  workflow_dispatch:
  schedule:
    - cron: '30 * * * *'
  watch:
    types: started
  repository_dispatch:
    types: chonghua.js
jobs:
  build:

    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout
        uses: actions/setup-node@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
      - name: npm install
        run: |
          npm install
      - name: '运行 【葱花视频】'
        run: |
          node chonghua.js
        env:
          CHGETBODY_VIDEO: ${{ secrets.CHGETBODY_VIDEO }}
          CHGETBODY_SHARE: ${{ secrets.CHGETBODY_SHARE }}
          CHGETBODY_TASKCENTER: ${{ secrets.CHGETBODY_TASKCENTER }}
          CHGETBODY_TIMERED: ${{ secrets.CHGETBODY_TIMERED }}
          CHGETBODY_SHAREREWARD: ${{ secrets.CHGETBODY_SHAREREWARD }}
          CHGETBODY_UID: ${{ secrets.CHGETBODY_UID }}  
          JD_DEBUG: ${{ secrets.JD_DEBUG }}
          PUSH_KEY: ${{ secrets.PUSH_KEY }}
          BARK_PUSH: ${{ secrets.BARK_PUSH }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
          BARK_SOUND: ${{ secrets.BARK_SOUND }}
          DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
          DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
          IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
